# AIO 分析器 Docker Compose 配置
# ==================================
# 完整的開發和生產環境部署配置

version: '3.8'

services:
  # PostgreSQL 數據庫
  db:
    image: postgres:15-alpine
    container_name: aio_analyzer_db
    environment:
      POSTGRES_DB: aio_analyzer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-aio_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aio_network

  # Redis 快取和訊息隊列
  redis:
    image: redis:7-alpine
    container_name: aio_analyzer_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aio_network

  # Django 應用
  web:
    build:
      context: .
      target: ${BUILD_TARGET:-development}
    container_name: aio_analyzer_web
    environment:
      - DEBUG=${DEBUG:-True}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=aio_analyzer
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-aio_password}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        cd /app/backend &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "
    networks:
      - aio_network

  # Celery Worker - GSC 隊列
  celery-worker-gsc:
    build:
      context: .
      target: celery-worker
    container_name: aio_analyzer_worker_gsc
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=aio_analyzer
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-aio_password}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - db
      - redis
    command: >
      sh -c "
        cd /app/backend &&
        celery -A aio_analyzer worker --loglevel=info --queues=gsc --concurrency=2 --hostname=gsc-worker@%h
      "
    networks:
      - aio_network

  # Celery Worker - Google Ads 隊列
  celery-worker-ads:
    build:
      context: .
      target: celery-worker
    container_name: aio_analyzer_worker_ads
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=aio_analyzer
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-aio_password}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - db
      - redis
    command: >
      sh -c "
        cd /app/backend &&
        celery -A aio_analyzer worker --loglevel=info --queues=ads --concurrency=2 --hostname=ads-worker@%h
      "
    networks:
      - aio_network

  # Celery Worker - SERP 隊列
  celery-worker-serp:
    build:
      context: .
      target: celery-worker
    container_name: aio_analyzer_worker_serp
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=aio_analyzer
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-aio_password}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - db
      - redis
    command: >
      sh -c "
        cd /app/backend &&
        celery -A aio_analyzer worker --loglevel=info --queues=serp --concurrency=1 --hostname=serp-worker@%h
      "
    networks:
      - aio_network

  # Celery Worker - 報告隊列
  celery-worker-reports:
    build:
      context: .
      target: celery-worker
    container_name: aio_analyzer_worker_reports
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=aio_analyzer
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-aio_password}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
      - ./logs:/app/logs
      - media_files:/app/media
    depends_on:
      - db
      - redis
    command: >
      sh -c "
        cd /app/backend &&
        celery -A aio_analyzer worker --loglevel=info --queues=reports --concurrency=2 --hostname=reports-worker@%h
      "
    networks:
      - aio_network

  # Celery Beat 排程器
  celery-beat:
    build:
      context: .
      target: celery-beat
    container_name: aio_analyzer_beat
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=aio_analyzer
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-aio_password}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    command: >
      sh -c "
        cd /app/backend &&
        celery -A aio_analyzer beat --loglevel=info --scheduler=django_celery_beat.schedulers:DatabaseScheduler
      "
    networks:
      - aio_network

  # Celery Flower 監控
  flower:
    build:
      context: .
      target: base
    container_name: aio_analyzer_flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
    ports:
      - "5555:5555"
    depends_on:
      - redis
    command: >
      sh -c "
        cd /app/backend &&
        celery -A aio_analyzer flower --port=5555
      "
    networks:
      - aio_network

  # Nginx 反向代理（生產環境）
  nginx:
    image: nginx:alpine
    container_name: aio_analyzer_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_files:/var/www/static
      - media_files:/var/www/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - aio_network
    profiles:
      - production

# 網路配置
networks:
  aio_network:
    driver: bridge
    name: aio_analyzer_network

# 數據卷配置
volumes:
  postgres_data:
    name: aio_analyzer_postgres_data
  redis_data:
    name: aio_analyzer_redis_data
  media_files:
    name: aio_analyzer_media
  static_files:
    name: aio_analyzer_static
